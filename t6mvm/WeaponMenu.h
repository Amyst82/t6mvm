#pragma once
#include "UIControls.h"
#include "CustomDvars.h"
#include "WeaponAnimationChangerMenu.h"
namespace WeaponMenu
{
	vector<const char*> CamoTags = {"Don't change",
									"Default",
									"None",
									"DEVGRU",
									"A-TACS AU",
									"ERDL",
									"Choco",
									"Blue Tiger",
									"Bloodshot",
									"Ghostex: Delta 6",
									"Kryptek: Typhon",
									"Carbon Fiber",
									"Cherry Blossom",
									"Art of War",
									"Ronin",
									"Skulls",
									"Gold",
									"Diamond",
									"Elite",
									"Digital CE",
									"Jungle Warfare",
									"UK Punk",
									"Benjamins",
									"Dia De Muertos",
									"Graffiti",
									"Kawaii",
									"Party Rock",
									"Zombies",
									"Viper",
									"Bacon",
									"Ghosts DLC Camo",
									"Paladin",
									"Cyborg",
									"Dragon",
									"Comics",
									"Aqua",
									"Breach",
									"Coyote",
									"Glam",
									"Rogue",
									"Pack-a-Punch",
									"Dead Man's Hand",
									"Beast",
									"Octane",
									"Weaponised 115",
									"Afterlife" };
	
	static string GetCFG()
	{
		std::string cfg =
			"//WEAPON\n" + 
			std::string("cg_gun_x ") + std::to_string(T6SDK::Dvars::GetFloat(*T6SDK::Dvars::DvarList::cg_gun_x)) + ";\n" +
			std::string("cg_gun_y ") + std::to_string(T6SDK::Dvars::GetFloat(*T6SDK::Dvars::DvarList::cg_gun_y)) + ";\n" +
			std::string("cg_gun_z ") + std::to_string(T6SDK::Dvars::GetFloat(*T6SDK::Dvars::DvarList::cg_gun_z)) + ";\n" +
			std::string("cg_gun_rot_p ") + std::to_string(T6SDK::Dvars::GetFloat(*T6SDK::Dvars::DvarList::cg_gun_rot_p)) + ";\n" +
			std::string("cg_gun_rot_y ") + std::to_string(T6SDK::Dvars::GetFloat(*T6SDK::Dvars::DvarList::cg_gun_rot_y)) + ";\n" +
			std::string("cg_gun_rot_r ") + std::to_string(T6SDK::Dvars::GetFloat(*T6SDK::Dvars::DvarList::cg_gun_rot_r)) + ";\n" +
			"//GENERATED BY T6MVM. REQUIRES T6MVM TO BE LOADED.\n" +
			std::string("mvm_camoChanging ") + std::to_string(T6SDK::Dvars::GetBool(CustomDvars::dvar_camoChanging) ? 1 : 0) + ";\n" +
			std::string("mvm_primaryCamo ") + std::to_string(T6SDK::Dvars::GetInt(CustomDvars::dvar_primaryCamo)) + ";\n" +
			std::string("mvm_secondaryCamo ") + std::to_string(T6SDK::Dvars::GetInt(CustomDvars::dvar_secondaryCamo)) + ";\n" +
			std::string("mvm_cameraSway ") + std::to_string(T6SDK::Dvars::GetBool(CustomDvars::dvar_cameraSway) ? 1 : 0) + ";\n" +
			std::string("mvm_cameraSwayMaxAngle ") + std::to_string(T6SDK::Dvars::GetFloat(CustomDvars::dvar_cameraSwayMaxAngle)) + ";\n";
		return cfg;
	}

	static void Draw()
	{
		if (!*UIControls::WeaponTabButton.isChecked)
			return;

		vec2_t coords = T6SDK::Drawing::GetGridCellCoords(8, 5);
		T6SDK::Drawing::DrawTextAbsolute("^9VIEWMODEL", coords.x, coords.y, 1.0f, T6SDK::Drawing::T_WHITECOLOR, T6SDK::AnchorPoint::Center, 0x00);

		UIControls::UI_GunXOffset.Draw();
		UIControls::UI_GunYOffset.Draw();
		UIControls::UI_GunZOffset.Draw();
		UIControls::UI_GunPitch.Draw();
		UIControls::UI_GunYaw.Draw();
		UIControls::UI_GunRoll.Draw();
		UIControls::UI_CamoChanging.Draw();

		vec2_t coords2 = T6SDK::Drawing::GetGridCellCoords(8, 14);
		T6SDK::Drawing::DrawTextAbsolute("^9CAMO", coords2.x, coords2.y, 1.0f, T6SDK::Drawing::T_WHITECOLOR, T6SDK::AnchorPoint::Center, 0x00);
		char buffer[64];
		sprintf_s(buffer, "Primary camo: ^3%s", CamoTags[CustomDvars::dvar_primaryCamo->current.integer+1]);
		UIControls::UI_PrimaryCamo.Text = buffer;
		UIControls::UI_PrimaryCamo.Draw(CustomDvars::dvar_camoChanging->current.enabled);

		char buffer2[64];
		sprintf_s(buffer2, "Secondary camo: ^3%s", CamoTags[CustomDvars::dvar_secondaryCamo->current.integer + 1]);
		UIControls::UI_SecondaryCamo.Text = buffer2;
		UIControls::UI_SecondaryCamo.Draw(CustomDvars::dvar_camoChanging->current.enabled);

		vec2_t coords3 = T6SDK::Drawing::GetGridCellCoords(8, 21);
		T6SDK::Drawing::DrawTextAbsolute("^9MISC", coords3.x, coords3.y, 1.0f, T6SDK::Drawing::T_WHITECOLOR, T6SDK::AnchorPoint::Center, 0x00);
		UIControls::UI_CameraSway.Draw();
		UIControls::UI_CameraSwayMaxAngle.Draw();

		UIControls::UI_WeaponAnimChanging.Draw();
	}

	static void Init()
	{
		UIControls::UI_GunXOffset = T6SDK::Drawing::UI_Slider("X Offset", &(*T6SDK::Dvars::DvarList::cg_gun_x)->current.value, 0.0f, -5.0f, 5.0f, 4, 6, T6SDK::Drawing::ORANGECOLOR, T6SDK::AnchorPoint::TopLeft, 0x00);
		UIControls::UI_GunXOffset.ToolTip = "Weapon viemodel X position offset.";

		UIControls::UI_GunYOffset = T6SDK::Drawing::UI_Slider("Y Offset", &(*T6SDK::Dvars::DvarList::cg_gun_y)->current.value, 0.0f, -5.0f, 5.0f, 7, 6, T6SDK::Drawing::ORANGECOLOR, T6SDK::AnchorPoint::TopLeft, 0x00);
		UIControls::UI_GunYOffset.ToolTip = "Weapon viemodel Y position offset.";

		UIControls::UI_GunZOffset = T6SDK::Drawing::UI_Slider("Z Offset", &(*T6SDK::Dvars::DvarList::cg_gun_z)->current.value, 0.0f, -5.0f, 5.0f, 10, 6, T6SDK::Drawing::ORANGECOLOR, T6SDK::AnchorPoint::TopLeft, 0x00);
		UIControls::UI_GunZOffset.ToolTip = "Weapon viemodel Z position offset.";

		UIControls::UI_GunPitch = T6SDK::Drawing::UI_Slider("Viewmodel pitch", &(*T6SDK::Dvars::DvarList::cg_gun_rot_p)->current.value, 0.0f, -90.0f, 90.0f, 4, 9, T6SDK::Drawing::ORANGECOLOR, T6SDK::AnchorPoint::TopLeft, 0x00);
		UIControls::UI_GunPitch.ToolTip = "Weapon viemodel pitch rotation offset.";

		UIControls::UI_GunYaw = T6SDK::Drawing::UI_Slider("Viewmodel yaw", &(*T6SDK::Dvars::DvarList::cg_gun_rot_y)->current.value, 0.0f, -90.0f, 90.0f, 7, 9, T6SDK::Drawing::ORANGECOLOR, T6SDK::AnchorPoint::TopLeft, 0x00);
		UIControls::UI_GunYaw.ToolTip = "Weapon viemodel yaw rotation offset.";

		UIControls::UI_GunRoll = T6SDK::Drawing::UI_Slider("Viewmodel roll", &(*T6SDK::Dvars::DvarList::cg_gun_rot_r)->current.value, 0.0f, -90.0f, 90.0f, 10, 9, T6SDK::Drawing::ORANGECOLOR, T6SDK::AnchorPoint::TopLeft, 0x00);
		UIControls::UI_GunRoll.ToolTip = "Weapon viemodel roll rotation offset.";

		UIControls::UI_CamoChanging = T6SDK::Drawing::UI_CheckBoxButton("CAMO CHANGING OFF", "CAMO CHANGING ON", 4, 15, T6SDK::AnchorPoint::TopLeft, &CustomDvars::dvar_camoChanging->current.enabled, 0x00);

		UIControls::UI_PrimaryCamo = T6SDK::Drawing::UI_EnumButton("Primary camo", -1, 44, &CustomDvars::dvar_primaryCamo->current.integer, 4, 17, T6SDK::AnchorPoint::TopLeft, 0x00);

		UIControls::UI_SecondaryCamo = T6SDK::Drawing::UI_EnumButton("Secondary camo", -1, 44, &CustomDvars::dvar_secondaryCamo->current.integer, 10, 17, T6SDK::AnchorPoint::TopLeft, 0x00);

		UIControls::UI_CameraSway = T6SDK::Drawing::UI_CheckBoxButton("POV CAMERA SWAY OFF", "POV CAMERA SWAY ON", 4, 22, T6SDK::AnchorPoint::TopLeft, &CustomDvars::dvar_cameraSway->current.enabled, 0x00);
		UIControls::UI_CameraSway.ToolTip = "POV camera sway (lowkey bodycam mode).";

		UIControls::UI_CameraSwayMaxAngle = T6SDK::Drawing::UI_Slider("Camera sway max angle", &CustomDvars::dvar_cameraSwayMaxAngle->current.value, 20.0f, 00.0f, 50.0f, 4, 24, T6SDK::Drawing::ORANGECOLOR, T6SDK::AnchorPoint::TopLeft, 0x00);
		UIControls::UI_CameraSwayMaxAngle.ToolTip = "POV camera sway max angle.";

		UIControls::UI_WeaponAnimChanging = T6SDK::Drawing::UI_CheckBoxButton("OPEN ANIMATIONS MENU", "CHANGING SOME ANIMS OWO", 8, 22, T6SDK::AnchorPoint::TopLeft, &WeaponAnimationChangerMenu::MenuOpened, 0x00);
		UIControls::UI_WeaponAnimChanging.ToolTip = "Change any weapon animation with any other.";
	}
}